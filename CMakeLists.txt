# Copyright (c) 2020 Dongkyu Kim (dkkim1005@gmail.com)

PROJECT (VMC_OPENMP_VER)
CMAKE_MINIMUM_REQUIRED (VERSION 3.0 FATAL_ERROR)
#SET (USE_CUDA TRUE)
SET (TARGET train_fnn)
IF (APPLE)
  SET (CMAKE_CXX_COMPILER /usr/local/opt/llvm/bin/clang++)
ELSEIF (UNIX)
  IF (NOT CMAKE_CXX_COMPILER)
    SET (CMAKE_CXX_COMPILER /usr/bin/g++)
  ENDIF (NOT CMAKE_CXX_COMPILER)
ENDIF ()
INCLUDE (${CMAKE_CURRENT_SOURCE_DIR}/cmake/FindMKL.cmake)
INCLUDE (${CMAKE_CURRENT_SOURCE_DIR}/cmake/FindTRNG4.cmake)
IF (USE_CUDA)
  FIND_PACKAGE (CUDA)
  #EXECUTE_PROCESS (COMMAND bash -c "cp ${CMAKE_CURRENT_SOURCE_DIR}/${TARGET}.cpp ${CMAKE_CURRENT_SOURCE_DIR}/${TARGET}.cu")
  SET (CUDA_NVCC_FLAGS "-O3 -Xcompiler -fopenmp -std=c++11")
  SET (CUDA_LIBRARIES ${CUDA_LIBRARIES} "cusolver")
ELSE ()
  SET (CMAKE_CXX_FLAGS "-std=c++14 -O3 -fopenmp")
ENDIF ()
LINK_LIBRARIES (${MKL_LIBRARIES} ${MKL_OPENMP_LIBRARY} ${TRNG4_LIBRARIES} ${CUDA_LIBRARIES})
IF (USE_CUDA)
  CUDA_ADD_EXECUTABLE (cu${TARGET} ${TARGET}.cu)
ELSE ()
  ADD_EXECUTABLE (${TARGET} ${TARGET}.cpp)
ENDIF ()
