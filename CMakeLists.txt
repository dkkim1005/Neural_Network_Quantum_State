# Copyright (c) 2020 Dongkyu Kim (dkkim1005@gmail.com)

IF (APPLE)
  # Plz check that clang++ is installed at the below directory.
  SET (CMAKE_CXX_COMPILER /usr/local/opt/llvm/bin/clang++)
ELSEIF (UNIX)
  # You can specify the compiler you want via 'CMAKE_CXX_COMPILER' variable.
  IF (NOT CMAKE_CXX_COMPILER)
    SET (CMAKE_CXX_COMPILER /usr/bin/g++)
  ENDIF (NOT CMAKE_CXX_COMPILER)
ENDIF ()

#SET (USE_CUDA TRUE) # --> CUDA 10.x version is required.
PROJECT (VMC_OPENMP_VER)
CMAKE_MINIMUM_REQUIRED (VERSION 3.0 FATAL_ERROR)
SET (TARGETS "CH-train_fnn;CH-train_rbm;SQ-train_fnn;TRI-train_fnn;TRI-replica_train_fnn;CB-train_fnn;meas_xmag;meas_zmag;meas_OI")
INCLUDE (${CMAKE_CURRENT_SOURCE_DIR}/cmake/FindMKL.cmake)
INCLUDE (${CMAKE_CURRENT_SOURCE_DIR}/cmake/FindTRNG4.cmake)
IF (USE_CUDA)
  FIND_PACKAGE (CUDA)
  SET (CUDA_NVCC_FLAGS "-O3 -Xcompiler -fopenmp -std=c++11")
  SET (CUDA_LIBRARIES ${CUDA_LIBRARIES} "cusolver")
ELSE ()
  SET (CMAKE_CXX_FLAGS "-std=c++14 -O3 -fopenmp")
ENDIF ()
LINK_LIBRARIES (${MKL_LIBRARIES} ${MKL_OPENMP_LIBRARY} ${TRNG4_LIBRARIES} ${CUDA_LIBRARIES})
FOREACH (TARGET ${TARGETS})
  IF (USE_CUDA)
    CUDA_ADD_EXECUTABLE (cu${TARGET} ${TARGET}.cu)
  ELSE ()
    ADD_EXECUTABLE (${TARGET} ${TARGET}.cpp)
  ENDIF ()
ENDFOREACH ()
